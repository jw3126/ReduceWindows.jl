var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ReduceWindows","category":"page"},{"location":"#ReduceWindows","page":"Home","title":"ReduceWindows","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ReduceWindows.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ReduceWindows]","category":"page"},{"location":"#ReduceWindows.reduce_window-Union{Tuple{F}, Tuple{F, Any, Any}} where F","page":"Home","title":"ReduceWindows.reduce_window","text":"reduce_window(f, arr, window; [neutral_element,])\n\nMove a sliding window over the arr and apply reduce(f, view(arr, window...), init=neutral_element). This function assumes, that f is associative, commutative and f(x,neutral_element) == x.\n\nTime complexity is O(length(arr) * log(prod(length,window))).\n\n\n\n\n\n","category":"method"}]
}
